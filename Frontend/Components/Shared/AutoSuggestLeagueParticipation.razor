<HxAutosuggest
    TItem="LeagueParticipation"
    TValue="int?"
    @bind-Value:get="@Value"
    @bind-Value:set="@ChangeValue"
    DataProvider="ProvideSuggestions"
    ValueSelector="t => t.Id"
    TextSelector='t => $"{t.Player.FirstName} {t.Player.LastName} ({t.Player.Email})"'
    MinimumLength="0"
    ItemFromValueResolver="ItemFromValueResolver"
    InputGroupStartText='@(IsWhite ? "White" : null)'
    InputGroupEndText='@(!IsWhite ? "Black" : null)'
    SearchIcon="null"/>

@code {
    [Parameter] public int? Value { get; set; }
    [Parameter] public EventCallback<int?> ValueChanged { get; set; }
    [Parameter] public required ICollection<LeagueParticipation> Players { get; set; }
    [Parameter] public required ICollection<LeagueParticipation> PlayersLeft { get; set; }
    [Parameter] public bool IsWhite { get; set; } = true;

    private Task<AutosuggestDataProviderResult<LeagueParticipation>> ProvideSuggestions(AutosuggestDataProviderRequest request)
    {
        var match = PlayersLeft.Where(x =>
            x.Player.FirstName.Contains(request.UserInput)
            || x.Player.LastName.Contains(request.UserInput)
            || x.Player.Email.Contains(request.UserInput)).ToList();
        return Task.FromResult(new AutosuggestDataProviderResult<LeagueParticipation> { Data = match });
    }

    private Task<LeagueParticipation?> ItemFromValueResolver(int? value)
    {
        if (value is null)
        {
            return Task.FromResult<LeagueParticipation?>(null);
        }

        return Task.FromResult(Players.FirstOrDefault(x => x.Id == value));
    }

    private void ChangeValue(int? val)
    {
        Value = val;
        ValueChanged.InvokeAsync(val);
    }

}
