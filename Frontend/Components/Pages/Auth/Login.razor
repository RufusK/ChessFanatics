@page "/auth/login"
@attribute [ExcludeFromInteractiveRouting]
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<PageTitle>Log in</PageTitle>

<EditForm Model="@model" method="post" OnValidSubmit="LoginUser" FormName="LoginForm">
    <DataAnnotationsValidator/>
    <HxInputText @bind-Value="@model.Email"
           Label="Email" Placeholder="name@example.com"/>
    <HxInputText @bind-Value="@model.Password"
           Label="Password" InputType="InputType.Password" Placeholder="password"/>
    <HxButton type="submit">
        Log in
    </HxButton>
</EditForm>

@code {
    [SupplyParameterFromForm] LoginModel model { get; set; } = new();

    private async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(model.Email, model.Password, true, false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; } = "jimzitrone@gmail.com";

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = "Beatles04@";
    }

}